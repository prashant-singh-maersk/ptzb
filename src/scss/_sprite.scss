// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$aboutus-bg-name: 'aboutus_bg';
$aboutus-bg-x: 0px;
$aboutus-bg-y: 722px;
$aboutus-bg-offset-x: 0px;
$aboutus-bg-offset-y: -722px;
$aboutus-bg-width: 1400px;
$aboutus-bg-height: 418px;
$aboutus-bg-total-width: 1400px;
$aboutus-bg-total-height: 1163px;
$aboutus-bg-image: '../images/sprite/sprite.png';
$aboutus-bg: (0px, 722px, 0px, -722px, 1400px, 418px, 1400px, 1163px, '../images/sprite/sprite.png', 'aboutus_bg', );
$car-name: 'car';
$car-x: 0px;
$car-y: 1140px;
$car-offset-x: 0px;
$car-offset-y: -1140px;
$car-width: 23px;
$car-height: 23px;
$car-total-width: 1400px;
$car-total-height: 1163px;
$car-image: '../images/sprite/sprite.png';
$car: (0px, 1140px, 0px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'car', );
$home-bg-name: 'home_bg';
$home-bg-x: 0px;
$home-bg-y: 0px;
$home-bg-offset-x: 0px;
$home-bg-offset-y: 0px;
$home-bg-width: 1400px;
$home-bg-height: 722px;
$home-bg-total-width: 1400px;
$home-bg-total-height: 1163px;
$home-bg-image: '../images/sprite/sprite.png';
$home-bg: (0px, 0px, 0px, 0px, 1400px, 722px, 1400px, 1163px, '../images/sprite/sprite.png', 'home_bg', );
$info-name: 'info';
$info-x: 138px;
$info-y: 1140px;
$info-offset-x: -138px;
$info-offset-y: -1140px;
$info-width: 22px;
$info-height: 22px;
$info-total-width: 1400px;
$info-total-height: 1163px;
$info-image: '../images/sprite/sprite.png';
$info: (138px, 1140px, -138px, -1140px, 22px, 22px, 1400px, 1163px, '../images/sprite/sprite.png', 'info', );
$location-name: 'location';
$location-x: 23px;
$location-y: 1140px;
$location-offset-x: -23px;
$location-offset-y: -1140px;
$location-width: 23px;
$location-height: 23px;
$location-total-width: 1400px;
$location-total-height: 1163px;
$location-image: '../images/sprite/sprite.png';
$location: (23px, 1140px, -23px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'location', );
$photos-name: 'photos';
$photos-x: 46px;
$photos-y: 1140px;
$photos-offset-x: -46px;
$photos-offset-y: -1140px;
$photos-width: 23px;
$photos-height: 23px;
$photos-total-width: 1400px;
$photos-total-height: 1163px;
$photos-image: '../images/sprite/sprite.png';
$photos: (46px, 1140px, -46px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'photos', );
$serv-name: 'serv';
$serv-x: 69px;
$serv-y: 1140px;
$serv-offset-x: -69px;
$serv-offset-y: -1140px;
$serv-width: 23px;
$serv-height: 23px;
$serv-total-width: 1400px;
$serv-total-height: 1163px;
$serv-image: '../images/sprite/sprite.png';
$serv: (69px, 1140px, -69px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'serv', );
$time-name: 'time';
$time-x: 92px;
$time-y: 1140px;
$time-offset-x: -92px;
$time-offset-y: -1140px;
$time-width: 23px;
$time-height: 23px;
$time-total-width: 1400px;
$time-total-height: 1163px;
$time-image: '../images/sprite/sprite.png';
$time: (92px, 1140px, -92px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'time', );
$vendor-name: 'vendor';
$vendor-x: 115px;
$vendor-y: 1140px;
$vendor-offset-x: -115px;
$vendor-offset-y: -1140px;
$vendor-width: 23px;
$vendor-height: 23px;
$vendor-total-width: 1400px;
$vendor-total-height: 1163px;
$vendor-image: '../images/sprite/sprite.png';
$vendor: (115px, 1140px, -115px, -1140px, 23px, 23px, 1400px, 1163px, '../images/sprite/sprite.png', 'vendor', );
$spritesheet-width: 1400px;
$spritesheet-height: 1163px;
$spritesheet-image: '../images/sprite/sprite.png';
$spritesheet-sprites: ($aboutus-bg, $car, $home-bg, $info, $location, $photos, $serv, $time, $vendor, );
$spritesheet: (1400px, 1163px, '../images/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
